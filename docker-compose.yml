services:
  nginx:
    build: 
      context: .
      dockerfile: Dockerfile.frontend
    restart: always
    networks:
      artist-network:
        aliases:
          - ar-tist.kro.kr.container

    ports:
      - ${NGINX_PORT}:80

    container_name: ar-tist_nginx
    stdin_open: true
    tty: true
  
  mongodb:
    image: mongo
    restart: always
    container_name: ar-tist_mongodb
    volumes:
      - ${PWD}/data/mongodb:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DB_NAME}
    networks:
      artist-network:
        aliases:
          - db.ar-tist.kro.kr.container

  mongo-express:
    image: mongo-express
    restart: always
    container_name: ar-tist_mongodb_express
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@db.ar-tist.kro.kr.container:27017
      PORT: 80
      VCAP_APP_HOST: express.ar-tist.kro.kr.container

    ports:
      - ${EXPRESS_PORT}:80

    networks:
      artist-network:
        aliases:
          - express.ar-tist.kro.kr.container

  fastapi:
    build: 
      context: .
      dockerfile: Dockerfile.backend
    restart: always
    container_name: artist_fastapi
    volumes:
      - ${PWD}/data/fastapi:/data
    
    env_file:
      - .env

    ports:
      - ${FASTAPI_PORT}:80
    networks:
      artist-network:
        aliases:
          - server.ar-tist.kro.kr.container

networks:
  artist-network:
    # external: true
    name: artist-network
    driver: bridge
    ipam:
      driver: default
